version: '3.4'

volumes:
  datafiles:
  data1-1:
  data1-2:

x-minio-common: &minio-common
  image: minio/minio
  command: server --console-address ":9001" /data1
  expose:
    - "9000"
    - "9001"
  ports:
    - "127.0.0.1:9000:9000"
    - "9001:9001"
  # environment:
    # MINIO_ROOT_USER: minioadmin
    # MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  nginx:
    container_name: Nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    image: nginx:latest
    depends_on:
      - messenger
    volumes:
      - ./nginx/:/etc/nginx:ro
  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: Minio
    volumes:
      - data1-1:/data1
      - data1-2:/data2
  messenger:
    container_name: Messenger
    image: ${DOCKER_REGISTRY-}messenger
    build:
      context: .
      dockerfile: Messenger/Dockerfile
    depends_on: 
      - database
    ports:
      - "1443"
      - "180"
    environment: 
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:1443;http://+:180
      - ASPNETCORE_Kestrel__Certificates__Default__Password=741b1cdd-7ff1-4fe8-b924-8a6ee1f005b1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/etc/https/certificate.pfx
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets
      - ~/.aspnet/https:/https:ro
      - ./nginx/privateCertificate.pfx:/etc/https/certificate.pfx:ro
  database:
    container_name: MySQLDB
    image: mysql:latest
    ports:
      - "3306:3306"
    volumes:
      - datafiles:/var/lib/mysql
    restart: always
    environment: 
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=True
      - MYSQL_ROOT_HOST=%